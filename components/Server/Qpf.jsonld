{
  "@context": "https://linkedsoftwaredependencies.org/contexts/ldf-server.jsonld",
  "@id": "npmd:ldf-server",
  "components": [
    {
      "@id": "ldfs:Server/Qpf",
      "@type": "Class",
      "requireElement": "LinkedDataFragmentsServerWorker",
      "comment": "LinkedDataFragmentsServer is an HTTP server that provides access to Linked Data Fragments",
      "parameters": [
        {
          "@id": "ldfs:title",
          "comment": "The server name",
          "range": "xsd:string",
          "unique": true,
          "default": "Linked Data Fragments server"
        },
        {
          "@id": "ldfs:baseURL",
          "comment": "The base URL path for the server",
          "range": "xsd:string",
          "unique": true,
          "default": "/"
        },
        {
          "@id": "ldfs:urlData",
          "comment": "The UrlData helper object",
          "range": { "@id": "ldfs:UrlData" },
          "unique": true,
          "default": { "@id": "ldfs:defaultUrlData", "@type": "ldfs:UrlData" }
        },
        {
          "@id": "ldfs:port",
          "comment": "The port the server will bind with",
          "range": "xsd:integer",
          "unique": true,
          "default": 3000
        },
        {
          "@id": "ldfs:workers",
          "comment": "The number of server instances that will be started",
          "range": "xsd:integer",
          "unique": true,
          "default": 1
        },
        {
          "@id": "ldfs:protocol",
          "comment": "Explicitly set the protocol, default will be the protocol derived from the baseURL",
          "range": "xsd:string",
          "unique": true
        },
        {
          "@id": "ldfs:datasource",
          "comment": "Datasource that will be exposed by the server",
          "range": { "@id": "ldfs:Datasource" },
          "default": [
            {
              "@id": "ldfs:defaultIndexDatasource",
              "@type": "ldfs:Datasource/Index",
              "rdfs:label": "dataset index",
              "ldfs:Datasource/path": "/",
              "ldfs:Datasource/hidden": true
            }
          ]
        },
        {
          "@id": "ldfs:prefix",
          "comment": "The URI prefixes that will be used",
          "default": [
            { "rdfa:prefix": "rdf",         "rdfa:uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#" },
            { "rdfa:prefix": "rdfs",        "rdfa:uri": "http://www.w3.org/2000/01/rdf-schema#" },
            { "rdfa:prefix": "owl",         "rdfa:uri": "http://www.w3.org/2002/07/owl#" },
            { "rdfa:prefix": "xsd",         "rdfa:uri": "http://www.w3.org/2001/XMLSchema#" },
            { "rdfa:prefix": "hydra",       "rdfa:uri": "http://www.w3.org/ns/hydra/core#" },
            { "rdfa:prefix": "void",        "rdfa:uri": "http://rdfs.org/ns/void#" },
            { "rdfa:prefix": "sd",          "rdfa:uri": "http://www.w3.org/TR/sparql11-service-description/#" }
          ]
        },
        {
          "@id": "ldfs:router",
          "comment": "A router for the server",
          "range": { "@id": "ldfs:Router" },
          "default": [
            { "@id": "ldfs:defaultRouterDatasource",  "@type": "ldfs:Router/Datasource" },
            { "@id": "ldfs:defaultRouterQuadPattern", "@type": "ldfs:Router/QuadPattern" },
            { "@id": "ldfs:defaultRouterPage",        "@type": "ldfs:Router/Page" }
          ]
        },
        {
          "@id": "ldfs:controller",
          "comment": "A controller for the server",
          "range": { "@id": "ldfs:Controller" },
          "default": [
            {
              "@id": "ldfs:defaultQuadPatternFragmentsController",
              "@type": "ldfs:Controller/QuadPatternFragments"
            },
            { "@id": "ldfs:defaultAssetsController",      "@type": "ldfs:Controller/Assets" },
            { "@id": "ldfs:defaultDereferenceController", "@type": "ldfs:Controller/Dereference" },
            { "@id": "ldfs:defaultNotFoundController",    "@type": "ldfs:Controller/NotFound" }
          ]
        },
        {
          "@id": "ldfs:viewCollection",
          "comment": "A ViewCollection provides access to content-negotiated views by name",
          "range": { "@id": "ldfs:View/Collection" },
          "unique": true,
          "default": { "@id": "ldfs:defaultViewCollection", "@type": "ldfs:View/Collection" }
        },
        {
          "@id": "ldfs:view",
          "comment": "A view for the server",
          "range": { "@id": "ldfs:View" },
          "default": [
            { "@id": "ldfs:defaultViewHtmlError",     "@type": "ldfs:View/Html/Error" },
            { "@id": "ldfs:defaultViewRdfError",      "@type": "ldfs:View/Rdf/Error"  },
            { "@id": "ldfs:defaultViewHtmlForbidden", "@type": "ldfs:View/Html/Forbidden" },
            { "@id": "ldfs:defaultViewHtmlNotFound",  "@type": "ldfs:View/Html/NotFound" },
            { "@id": "ldfs:defaultViewRdfNotFound",   "@type": "ldfs:View/Rdf/NotFound"  },
            { "@id": "ldfs:defaultViewHtmlQpf",       "@type": "ldfs:View/Html/Qpf" },
            { "@id": "ldfs:defaultViewRdfQpf",        "@type": "ldfs:View/Rdf/Qpf" }
          ]
        },
        {
          "@id": "ldfs:responseHeader",
          "comment": "Configuration for the server response data",
          "range": { "@id": "ldfs:Response" },
          "default": [
            { "ldfs:headerName": "Access-Control-Allow-Origin",   "ldfs:headerValue": "*" },
            { "ldfs:headerName": "Access-Control-Allow-Headers",  "ldfs:headerValue": "Accept-Datetime" },
            { "ldfs:headerName": "Access-Control-Expose-Headers", "ldfs:headerValue": "Content-Location,Link,Memento-Datetime" }
          ]
        },
        {
          "@id": "ldfs:sslKey",
          "comment": "Path to an SSL key",
          "range": "xsd:string",
          "unique": true,
          "default": "config/certs/localhost-server.key"
        },
        {
          "@id": "ldfs:sslCert",
          "comment": "Path to an SSL certificate",
          "range": "xsd:string",
          "unique": true,
          "default": "config/certs/localhost-server.crt"
        },
        {
          "@id": "ldfs:sslCa",
          "comment": "Path to an SSL certificate authority",
          "range": "xsd:string",
          "unique": true,
          "default": [ "config/certs/localhost-ca.crt" ]
        },
        {
          "@id": "ldfs:logging",
          "comment": "If the server should perform logging",
          "range": "xsd:boolean",
          "unique": true,
          "default": false
        },
        {
          "@id": "ldfs:loggingFile",
          "comment": "Path to a log file",
          "range": "xsd:string",
          "unique": true,
          "default": "access.log"
        },
        {
          "@id": "ldfs:assetsPath",
          "comment": "Path matching for assets",
          "range": "xsd:string",
          "unique": true
        },
        {
          "@id": "ldfs:assetsDir",
          "comment": "Path to a directory where assets can be found",
          "range": "xsd:string",
          "default": "file://../assets/"
        },
        {
          "@id": "ldfs:Controller/Dereference/dereference"
        }
      ],
      "constructorArguments": [
        {
          "fields": [
            {
              "@id": "ldfs:Server/Qpf/ObjectMappings/title",
              "keyRaw": "title",
              "value": "ldfs:title"
            },
            {
              "@id": "ldfs:Server/Qpf/ObjectMappings/urlData",
              "keyRaw": "urlData",
              "value": "ldfs:urlData"
            },
            {
              "keyRaw": "port",
              "value": "ldfs:port"
            },
            {
              "keyRaw": "protocol",
              "value": "ldfs:protocol"
            },
            {
              "keyRaw": "workers",
              "value": "ldfs:workers"
            },
            {
              "@id": "ldfs:Server/Qpf/ObjectMappings/datasources",
              "keyRaw": "datasources",
              "value": {
                "fields": [
                  {
                    "collectEntries": "ldfs:datasource",
                    "key": "ldfs:Datasource/path",
                    "value": "rdf:object"
                  }
                ]
              }
            },
            {
              "@id": "ldfs:Server/Qpf/ObjectMappings/prefixes",
              "keyRaw": "prefixes",
              "value": {
                "fields": [
                  {
                    "collectEntries": "ldfs:prefix",
                    "key": "rdfa:prefix",
                    "value": "rdfa:uri"
                  }
                ]
              }
            },
            {
              "@id": "ldfs:Server/Qpf/ObjectMappings/routers",
              "keyRaw": "routers",
              "value": "ldfs:router"
            },
            {
              "keyRaw": "controllers",
              "value": "ldfs:controller"
            },
            {
              "@id": "ldfs:Server/Qpf/ObjectMappings/views",
              "keyRaw": "views",
              "value": "ldfs:viewCollection"
            },
            {
              "@id": "ldfs:Server/Qpf/ObjectMappings/viewsRaw",
              "keyRaw": "viewsRaw",
              "value": "ldfs:view"
            },
            {
              "keyRaw": "response",
              "value": {
                "@type": "ObjectMapping",
                "fields": [
                  {
                    "keyRaw": "headers",
                    "value": {
                      "fields": [
                        {
                          "collectEntries": "ldfs:responseHeader",
                          "key": "ldfs:headerName",
                          "value": "ldfs:headerValue"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "keyRaw": "ssl",
              "value": {
                "fields": [
                  {
                    "keyRaw": "keys",
                    "value": {
                      "fields": [
                        {
                          "keyRaw": "key",
                          "value": "ldfs:sslKey"
                        },
                        {
                          "keyRaw": "cert",
                          "value": "ldfs:sslCert"
                        },
                        {
                          "keyRaw": "ca",
                          "value": "ldfs:sslCa"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "keyRaw": "logging",
              "value": {
                "fields": [
                  {
                    "keyRaw": "enabled",
                    "value": "ldfs:logging"
                  },
                  {
                    "keyRaw": "file",
                    "value": "ldfs:loggingFile"
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
